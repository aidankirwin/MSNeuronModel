function optimization(param, begin_val, end_val, segment_type)
    % optimization of constants in HH and internode

    % Inputs:
    % param: the parameter being changed as an index of [Cm, vna, vk, vl, gna, gk, gl, ra]
    % begin_val: int
    % end_val: int
    % segment_type: "HH" or "IN"
    
    % Output:
    % plot

    max_time = 4;
    time_step = 0.005;
    time_arr = 0:time_step:max_time;
    
    % for HH: [Cm, vna, vk, vl, gna, gk, gl, ra]
    HH_param = [1, -115, 12, -10.613, 120, 36, 0.3, 1];    

    % for internode: [Cm, ra, rl]
    internode_param = [1, 1, 1/0.3];

    figure(), hold on
    LineWidth = 1.5;
    FontSize = 12;

    lit_data = [0.04309901825433049 0.06483442187979449
                0.15917099467490314 0.643985780861982
                0.258815988429423 2.066227603399767
                0.3526844608068689 3.419268973024458
                0.43355576008589924 5.279901010307171
                0.49926369075011157 7.58747703847331
                0.5498082527995054 10.088401877742626
                0.5851894462340812 12.582321325305301
                0.6155161834637175 15.44052114161309
                0.6407884644884145 18.242677824267773
                0.6610062893081725 20.932748239616288
                0.68122411412793 23.580786304724967
                0.7014419389476876 26.56508317175222
                0.7166053075625056 28.834830084702517
                0.7317686761773241 31.2727063986121
                0.7469320447921421 34.046841514440246
                0.7570409572020211 36.6528472293091
                0.7722043258168392 39.76324114705582
                0.7772587820217787 42.11705276048576
                0.7873676944316572 44.80712317583426
                0.7974766068415362 47.497193591182764
                0.8025310630464757 50.31336105725073
                0.8075855192514148 52.87733442187978
                0.8176944316612937 55.651469537707925
                0.8278033440711727 60.9475456679253
                0.8379122564810513 66.32768649862231
                0.8480211688909303 71.70782732931931
                0.8581300813008088 77.08796816001632
                0.8631845375057483 79.98820032656394
                0.8682389937106878 82.3840442902337
                0.8732934499156273 84.97323706500663
                0.8783479061205663 87.84824982141035
                0.8884568185304453 90.53832023675885
                0.8985657309403243 93.22839065210735
                0.9130592626680945 96.35279535326734
                0.9212762693664631 98.52446678232472
                0.9322957070541014 100.7930656189407
                0.9592192053995969 103.68043507840936
                1.035036048473688 106.14283026329217
                1.1816152784169307 105.76337154584934
                1.2827044025157188 103.71966527196652
                1.348412333179931 101.10945632207367
                1.398956895229325 98.62954765792428
                1.4444470010737795 96.17065516889478
                1.489937106918234 93.71176267986529
                1.5354272127626887 91.15479470694288
                1.5859717748120827 88.29659489063509
                1.6264074244515978 85.83069700989896
                1.6668430740911133 83.3367775623363
                1.7123331799355679 80.61868558016124
                1.7578232857800224 77.84455046433308
                1.793204479214598 75.49073885090314
                1.8386945850590526 72.77264686872809
                1.879130234698568 70.25070585433886
                1.9195658843380832 67.72876483994965
                1.9650559901825377 65.04569981630777
                2.005491639822053 62.50274262679865
                2.050981745666508 59.9387692621696
                2.0964718515109624 57.29073119706092
                2.141961957355417 54.72675783243187
                2.1874520631998715 52.20481681804266
                2.2379966252492656 49.535762577814054
                2.2885411872986596 46.99280538830493
                2.3390857493480532 44.4708643739157
                2.3896303113974473 41.969939534646386
                2.4502837858567204 39.279869119297885
                2.5008283479061144 36.905041330748034
                2.561481822365387 34.235987090519444
                2.61708084061972 31.827533421777716
                2.672679858874054 29.381250637820187
                2.733333333333327 26.85930962343096
                2.7939868077925993 24.358384784161643
                2.8546402822518724 21.878476120012238
                2.9203482129160845 19.402770690886825
                2.9911105997852365 16.91445555668946
                3.0618729866543877 14.594269823451356
                3.1477987421383578 12.204030173146919
                3.238778953827267 9.9903263938497
                3.339868077926055 7.976276278191648
                3.456120570639661 6.12535171227384
                3.5791123382931866 4.670898957943535
                3.7291992636907416 3.1969354866142368
                3.849819462635838 2.284043897728921
                3.961566191133601 1.6027648152099374
        ];
    
    plot(lit_data(:,1),lit_data(:,2), 'LineWidth', LineWidth);

    legends{1} = 'Data from Literature';
    
    neuron = Neuron(max_time, time_step);
    input = current_injection(max_time, time_step, 0, 1, -40);
    neuron.add_segment("NODE", [0, -1]);

    if segment_type == "HH"
        for i = begin_val:end_val
            switch param
                case 1
                    param_val = i/5;
                    param_name = "Cm";
                case 2
                    param_val = i*10;
                    param_name = "vna";
                case 3
                    param_val = i*2;
                    param_name = "vk";
                case 4
                    param_val = i*5;
                    param_name = "vl";
                case 5
                    param_val = i*10;
                    param_name = "gna";
                case 6
                    param_val = i*5;
                    param_name = "gk";
                case 7
                    param_val = i/50;
                    param_name = "gl";
                case 8
                    param_val = i/10;
                    param_name = "ra";
            end

            HH_param(param) = param_val;
            neuron.modify_consts(HH_param, internode_param);

            [output, time] = neuron.simulate(input, 0);
            plot(time_arr, output(1,:));
            legends{i-begin_val+1} = sprintf('%s = %0.4f', param_name, param_val);
        end

        grid on;
        hold off

        legend(legends);
        xlabel('Time (ms)')
        ylabel('Membrane Voltage (mV)')
        set(gca, 'FontSize', FontSize)

    end

    grid on;
    hold off
    
    legend(legends);
    xlabel('Time (ms)')
    ylabel('Membrane Voltage (mV)')
    set(gca, 'FontSize', FontSize)
end